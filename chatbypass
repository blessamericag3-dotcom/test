--[[
    Simple Chat Bypasser â€“ Native Roblox GUI
]]

if getgenv().ChatBypassLoaded then return end
getgenv().ChatBypassLoaded = true

-- Services
local Players = game:GetService("Players")
local TextChatService = game:GetService("TextChatService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local StarterGui = game:GetService("StarterGui")

-- Player
local player = Players.LocalPlayer

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ChatBypassGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Main Frame
local frame = Instance.new("Frame")
frame.Name = "MainFrame"
frame.Size = UDim2.new(0, 300, 0, 140)
frame.Position = UDim2.new(0.5, -150, 0.7, -70)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.Parent = screenGui

local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 8)
uiCorner.Parent = frame

-- TextBox for input
local textBox = Instance.new("TextBox")
textBox.Name = "MessageBox"
textBox.Size = UDim2.new(1, -20, 0, 40)
textBox.Position = UDim2.new(0, 10, 0, 10)
textBox.PlaceholderText = "Enter message..."
textBox.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
textBox.TextColor3 = Color3.fromRGB(255, 255, 255)
textBox.ClearTextOnFocus = false
textBox.Parent = frame

-- Send Button
local sendButton = Instance.new("TextButton")
sendButton.Name = "SendButton"
sendButton.Size = UDim2.new(1, -20, 0, 30)
sendButton.Position = UDim2.new(0, 10, 0, 60)
sendButton.Text = "Send Bypassed"
sendButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
sendButton.TextColor3 = Color3.fromRGB(255, 255, 255)
sendButton.BorderSizePixel = 0
sendButton.Parent = frame

-- Feedback Label
local feedback = Instance.new("TextLabel")
feedback.Name = "Feedback"
feedback.Size = UDim2.new(1, -20, 0, 20)
feedback.Position = UDim2.new(0, 10, 0, 100)
feedback.BackgroundTransparency = 1
feedback.TextColor3 = Color3.fromRGB(150, 150, 150)
feedback.Text = ""
feedback.Font = Enum.Font.SourceSans
feedback.TextSize = 14
feedback.Parent = frame

-- Helper: bypass text using zero-width space (U+200B)
local ZERO = utf8.char(8203)
local function bypassText(text)
    local result = {}
    for char in text:gmatch('.') do
        table.insert(result, char .. ZERO)
    end
    return table.concat(result)
end

-- Send action
sendButton.MouseButton1Click:Connect(function()
    local msg = textBox.Text or ""
    if msg == "" then
        feedback.Text = "Please enter a message."
        return
    end
    local bypassed = bypassText(msg)

    -- Attempt modern TextChatService remote
    local modernCmd = TextChatService:FindFirstChild("TextChatCommands", true)
    local modernRemote = modernCmd and modernCmd:FindFirstChild("SayMessageRequest")
    -- Attempt legacy remote
    local legacyContainer = ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents")
    local legacyRemote = legacyContainer and legacyContainer:FindFirstChild("SayMessageRequest")

    if modernRemote then
        modernRemote:FireServer(bypassed, "All")
        feedback.Text = "Sent via TextChatService"
    elseif legacyRemote then
        legacyRemote:FireServer(bypassed, "All")
        feedback.Text = "Sent via Legacy Chat"
    else
        -- Fallback: local system message
        StarterGui:SetCore("ChatMakeSystemMessage", {Text = bypassed})
        feedback.Text = "No remote; shown locally"
    end

    -- Clear
    textBox.Text = ""
    task.delay(2, function() feedback.Text = "" end)
end)
